name: Install winget
description: Installs the latest version of winget
author: Dominion/Cyberboss
branding:
  icon: arrow-down-circle
  color: blue
inputs:
  GITHUB_TOKEN:
    description: 'No scopes GitHub token for querying the API and downloading from winget-cli releases'
    required: false
    default: 'NONE'
outputs:
  winget-version:
    description: "The version of winget installed"
    value: ${{ steps.winget-version.outputs.winget-version }}
runs:
# Hacked together https://github.com/microsoft/winget-cli/issues/1861#issuecomment-1352784247
# https://github.com/microsoft/winget-cli/issues/700#issuecomment-874084714
  using: composite
  steps:
    - name: Download Microsoft.UI.Xaml v2.7.3
      shell: powershell
      run: |
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Uri https://www.nuget.org/api/v2/package/Microsoft.UI.Xaml/2.7.3 -OutFile .\microsoft.ui.xaml.2.7.3.zip

    - name: Unzip Microsoft.UI.Xaml v2.7.3
      shell: powershell
      run: |
        Expand-Archive .\microsoft.ui.xaml.2.7.3.zip

    - name: Download Microsoft.VCLibs.x64.14.00.Desktop
      shell: powershell
      run: |
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Uri https://aka.ms/Microsoft.VCLibs.x64.14.00.Desktop.appx -OutFile Microsoft.VCLibs.x64.14.00.Desktop.appx

    - name: Determine Latest winget release via GitHub API
      id: github_api
      shell: pwsh
      run: |
        $ProgressPreference = 'SilentlyContinue'
        if ("${{ inputs.GITHUB_TOKEN }}" -ne "NONE") {
          $headers = @{ "Authorization" = "Bearer ${{ inputs.GITHUB_TOKEN }}" }
          Write-Host "Token present"
        } else {
          $headers = @{}
          Write-Host "No token present"
        }

        $gitHubReleasesResponse = Invoke-RestMethod https://api.github.com/repos/microsoft/winget-cli/releases/latest -Headers $headers
        $wingetReleaseAssets = $gitHubReleasesResponse.assets
        $latestWingetMsixBundleUri = $wingetReleaseAssets.browser_download_url | Where-Object {$_.EndsWith(".msixbundle")}
        $latestWingetLicenseXmlUri = $wingetReleaseAssets.browser_download_url | Where-Object {$_.EndsWith("License1.xml")}
        echo "latest_winget_msix_bundle_uri=$latestWingetMsixBundleUri" >> $GITHUB_OUTPUT
        echo "latest_winget_license_xml_uri=$latestWingetLicenseXmlUri" >> $GITHUB_OUTPUT

    - name: Download winget
      shell: powershell
      run: |
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Headers $headers -Uri "${{ steps.github_api.outputs.latest_winget_msix_bundle_uri }}" -OutFile "./winget.msixbundle"

    - name: Download License
      shell: powershell
      run: |
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Headers $headers -Uri "${{ steps.github_api.outputs.latest_winget_license_xml_uri }}" -OutFile "./winget_License1.xml"

    - name: Install Microsoft.UI.Xaml v2.7.3
      shell: powershell
      run: |
        Add-AppxPackage .\microsoft.ui.xaml.2.7.3\tools\AppX\x64\Release\Microsoft.UI.Xaml.2.7.appx

    - name: Install Microsoft.VCLibs.x64.14.00.Desktop
      shell: powershell
      run: |
        Add-AppxPackage Microsoft.VCLibs.x64.14.00.Desktop.appx

    - name: Install winget
      shell: powershell
      run: |
        Add-AppxProvisionedPackage -Online -PackagePath ./winget.msixbundle -LicensePath ./winget_License1.xml

    - name: Cleanup Downloads
      shell: powershell
      run: |
        rm Microsoft.VCLibs.x64.14.00.Desktop.appx
        rm ./winget_License1.xml
        rm ./winget.msixbundle
        Remove-Item -Recurse -Force .\microsoft.ui.xaml.2.7.3

    - name: Output winget Version
      id: winget-version
      shell: pwsh
      run: |
        $version=winget --version
        Write-Host "$version"
        echo "winget-version=$version" >> $GITHUB_OUTPUT

